// Code generated by MockGen. DO NOT EDIT.
// Source: ./doer1.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDoer1 is a mock of Doer1 interface.
type MockDoer1 struct {
	ctrl     *gomock.Controller
	recorder *MockDoer1MockRecorder
}

// MockDoer1MockRecorder is the mock recorder for MockDoer1.
type MockDoer1MockRecorder struct {
	mock *MockDoer1
}

// NewMockDoer1 creates a new mock instance.
func NewMockDoer1(ctrl *gomock.Controller) *MockDoer1 {
	mock := &MockDoer1{ctrl: ctrl}
	mock.recorder = &MockDoer1MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDoer1) EXPECT() *MockDoer1MockRecorder {
	return m.recorder
}

// DoSomething1 mocks base method.
func (m *MockDoer1) DoSomething1(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething1", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoSomething1 indicates an expected call of DoSomething1.
func (mr *MockDoer1MockRecorder) DoSomething1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething1", reflect.TypeOf((*MockDoer1)(nil).DoSomething1), arg0, arg1)
}
